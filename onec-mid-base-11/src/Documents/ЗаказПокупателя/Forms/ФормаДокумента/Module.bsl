
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

// {{ Чмутов С. С.
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Подключаемый_КЛК_СогласованнаяСкидкаПриИзменении(Элемент)
	
	КЛК_ИзменитьСкидкуВДокументе();
	
КонецПроцедуры

#КонецОбласти
// }} Чмутов С. С.

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// {{ Чмутов С. С.: Изменено применение сумм указанной в документе согласованной скидки и скидки в строке
	// 					Добавлен пересчет суммы документа при пересчете суммы строки
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
	СуммаСкидок         = ТекущиеДанные.Скидка + Объект.КЛК_СогласованнаяСкидка;
	СуммаБезСкидки      = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	ТекущиеДанные.Сумма = СуммаБезСкидки * (1 - Мин(1, СуммаСкидок / 100));
	
	Если СуммаБезСкидки > 0 И СуммаСкидок > 100 Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон("Для товара/услуги ""%1"" сумма скидок превысила 100%%", ТекущиеДанные.Номенклатура));
		
	КонецЕсли;
	
	РассчитатьСуммуДокумента();
	// }} Чмутов С. С.
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

// {{ Чмутов С. С.
&НаКлиенте
Процедура Подключаемый_КЛК_ПересчитатьСкидку(Команда)
	
	КЛК_ПересчитатьСкидкуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура КЛК_ПересчитатьСкидкуДокумента()
	
	// Товары
	Для Каждого СтрокаТовары Из Объект.Товары Цикл
		
		РассчитатьСуммуСтроки(СтрокаТовары);
		
	КонецЦикла;

	// Услуги
	Для Каждого СтрокаУслуги Из Объект.Услуги Цикл
		
		РассчитатьСуммуСтроки(СтрокаУслуги);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
АСИНХ Процедура КЛК_ИзменитьСкидкуВДокументе()
	
	УточнитьИзменениеСкидки = (Объект.Товары.Количество() > 0 ИЛИ Объект.Услуги.Количество() > 0);
	
	Если УточнитьИзменениеСкидки Тогда
		
		Ответ = ЖДАТЬ ВопросАсинх("Изменено значение скидки. Пересчитать табличные части по новой скидке?", РежимДиалогаВопрос.ДаНет, , , "Пересчет табличных частей");
		
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			
			Возврат;
			
		КонецЕсли;
		
		КЛК_ПересчитатьСкидкуДокумента();
		
	КонецЕсли;
	
КонецПроцедуры
// }} Чмутов С. С.	

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
