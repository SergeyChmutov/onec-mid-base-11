
#Область ПрограммныйИнтерфейс

// Процедура программно дополняет переданную форму полями
// для работы с добавленными реквизитами объектов
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения
//
Процедура ДополнитьФорму(Форма) Экспорт
	
	ИмяФормы = Форма.ИмяФормы;
	
	Если ИмяФормы = "Документ.ЗаказПокупателя.Форма.ФормаДокумента" Тогда
		
		ДобавитьПолеКонтактноеЛицоКонтрагентаВГруппаШапкаПраво(Форма);
		
		ДобавитьГруппуСогласованнаяСкидкаВГруппаШапкаЛево(Форма);
		
	ИначеЕсли ИмяФормы = "Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокумента" Тогда
		
		ДобавитьПолеКонтактноеЛицоКонтрагентаВГруппаШапкаПраво(Форма);
		
	ИначеЕсли ИмяФормы = "Документ.РеализацияТоваровУслуг.Форма.ФормаДокумента" Тогда
		
		ДобавитьПолеКонтактноеЛицоКонтрагентаВГруппаШапкаПраво(Форма);
		
	ИначеЕсли ИмяФормы = "Документ.ОплатаОтПокупателя.Форма.ФормаДокумента" Тогда
		
		ДобавитьПолеКонтактноеЛицоКонтрагентаПередСуммаДокумента(Форма);
		
	ИначеЕсли ИмяФормы = "Документ.ОплатаПоставщику.Форма.ФормаДокумента" Тогда
		
		ДобавитьПолеКонтактноеЛицоКонтрагентаПередСуммаДокумента(Форма);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьПолеКонтактноеЛицоКонтрагентаВГруппаШапкаПраво(Форма)
	
	ПолеВвода = Форма.Элементы.Добавить("КонтактноеЛицо", Тип("ПолеФормы"), Форма.Элементы.ГруппаШапкаПраво);
	
	ПолеВвода.Вид         = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.КЛК_КонтактноеЛицо";
	
КонецПроцедуры

Процедура ДобавитьПолеКонтактноеЛицоКонтрагентаПередСуммаДокумента(Форма)
	
	ПолеВвода = Форма.Элементы.Вставить("КонтактноеЛицо", Тип("ПолеФормы"), , Форма.Элементы.СуммаДокумента);
	
	ПолеВвода.Вид         = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.КЛК_КонтактноеЛицо";
	
КонецПроцедуры

Процедура ДобавитьГруппуСогласованнаяСкидкаВГруппаШапкаЛево(Форма)
	
	// Группа
	ГруппаСогласованнаяСкидка = Форма.Элементы.Добавить("ГруппаСогласованнаяСкидка", Тип("ГруппаФормы"), Форма.Элементы.ГруппаШапкаЛево);
	
	ГруппаСогласованнаяСкидка.Вид                  = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаСогласованнаяСкидка.Группировка          = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	ГруппаСогласованнаяСкидка.ОтображатьЗаголовок  = Ложь;
	ГруппаСогласованнаяСкидка.Объединенная         = Истина;

	// Поле ввода
	ПолеВводаСогласованнаяСкидка = Форма.Элементы.Добавить("КЛК_СогласованнаяСкидка", Тип("ПолеФормы"), ГруппаСогласованнаяСкидка);
	
	ПолеВводаСогласованнаяСкидка.Вид         = ВидПоляФормы.ПолеВвода;
	ПолеВводаСогласованнаяСкидка.ПутьКДанным = "Объект.КЛК_СогласованнаяСкидка";
	
	ПолеВводаСогласованнаяСкидка.УстановитьДействие("ПриИзменении", "Подключаемый_КЛК_СогласованнаяСкидкаПриИзменении");
	
	// Команда
	КомандаПересчитатьСкидку = Форма.Команды.Добавить("ПересчитатьСкидку");
	
	КомандаПересчитатьСкидку.Заголовок = "Пересчитать скидку";
	КомандаПересчитатьСкидку.Действие  = "Подключаемый_КЛК_ПересчитатьСкидку";
	
	// Кнопка команды
	КнопкаФормыПересчитатьСкидку = Форма.Элементы.Добавить("ПересчитатьСкидку", Тип("КнопкаФормы"), ГруппаСогласованнаяСкидка);
	
	КнопкаФормыПересчитатьСкидку.Заголовок   = "Пересчитать скидку документа";
	КнопкаФормыПересчитатьСкидку.ИмяКоманды  = "ПересчитатьСкидку";
	КнопкаФормыПересчитатьСкидку.Вид         = ВидКнопкиФормы.ОбычнаяКнопка;
	КнопкаФормыПересчитатьСкидку.Отображение = ОтображениеКнопки.КартинкаИТекст;
	КнопкаФормыПересчитатьСкидку.Картинка    = БиблиотекаКартинок.Обновить;
	
КонецПроцедуры

#КонецОбласти